# <%= appName %>

Generated by AWS Vibe on <%= new Date().toISOString() %>

## Architecture

- **Blueprint**: containers
- **Environment**: Dev + Prod stacks
- **Frontend**: Next.js on S3 + CloudFront
- **Backend**: ECS Fargate + ALB
- **Database**: Aurora Serverless v2 (PostgreSQL)
- **Container Registry**: ECR

## Structure

```
.
├── infra/          # CDK infrastructure
├── web/            # Next.js frontend
├── api/            # Express API (containerized)
│   └── Dockerfile
└── tests/          # Tests
```

## Local Development

```bash
# Install dependencies
cd api && npm install
cd ../web && npm install
cd ../infra && npm install

# Run API locally
cd api && npm run dev

# Run web locally
cd web && npm run dev

# Build Docker image
cd api && docker build -t <%= appName %>-api .
```

## Deployment

Infrastructure is managed via AWS CDK and deployed automatically by AWS Vibe.

- **Dev Stack**: `<%= appName %>-Dev`
- **Prod Stack**: `<%= appName %>-Prod`

### Container Deployment

After infrastructure is deployed, build and push the Docker image:

```bash
# Get ECR login
aws ecr get-login-password --region <%= region %> | docker login --username AWS --password-stdin <ACCOUNT>.dkr.ecr.<%= region %>.amazonaws.com

# Build image
cd api && docker build -t <%= appName %>-api .

# Tag image
docker tag <%= appName %>-api:latest <REPOSITORY_URI>:latest

# Push to ECR
docker push <REPOSITORY_URI>:latest
```

## API Endpoints

<% spec.api.forEach(function(endpoint) { %>
- `<%= endpoint.method %> <%= endpoint.path %>` - <%= endpoint.description || endpoint.handler %>
<% }); %>

## Database

Aurora Serverless v2 PostgreSQL cluster with automatic scaling.

<% spec.dataModel.forEach(function(model) { %>
### <%= model.table %>

```sql
CREATE TABLE <%= model.table.toLowerCase() %> (
  <%= model.partitionKey %> <%= model.attributes.find(a => a.name === model.partitionKey)?.type === 'number' ? 'INTEGER' : 'VARCHAR(255)' %> PRIMARY KEY,
  <% model.attributes.filter(a => a.name !== model.partitionKey).forEach(function(attr, idx, arr) { %>
  <%= attr.name %> <%= attr.type === 'number' ? 'INTEGER' : attr.type === 'boolean' ? 'BOOLEAN' : 'TEXT' %><%= idx < arr.length - 1 ? ',' : '' %>
  <% }); %>
);
```
<% }); %>

## License

MIT
